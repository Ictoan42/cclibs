local a=require"cc.expect"local b,c=a.expect,a.range;local d={["<"]=1,["="]=2,[">"]=0}local e={["="]=0,[">"]=1}local f={t=0,s=1,m=2}local g={daily=0,["12h"]=1,["6h"]=2,["4h"]=3,["3h"]=4,["2h"]=5,hourly=6,["45m"]=7,["30m"]=8,["15m"]=9}local h={}function h.new(i)b(1,i,"boolean","table")local j=type(i)=="boolean"and{cyclic=i,entries={}}or i;j.ctx=j.ctx or{station=0,condition=0}return setmetatable(j,{__index=h})end;function h:entry(k,i)b(1,k,"string")b(2,i,"table")self.ctx.station=self.ctx.station+1;self.ctx.condition=1;self.entries[self.ctx.station]={instruction={id=k,data=i},conditions={}}return self end;function h:condition(k,i)b(1,k,"string")b(2,i,"table")local l=self.entries[self.ctx.station].conditions;l[self.ctx.condition]=l[self.ctx.condition]or{}table.insert(l[self.ctx.condition],{id=k,data=i})return self end;function h:OR()self.ctx.condition=self.ctx.condition+1;return self end;function h:serialize(m)self.ctx=nil;return m and textutils.serializeJSON(self)or textutils.serialize(self)end;function h:to(n)b(1,n,"string")return self:entry("create:destination",{text=n})end;function h:rename(n)b(1,n,"string")return self:entry("create:rename",{text=n})end;function h:throttle(o)b(1,o,"number")c(o,5,100)return self:entry("create:throttle",{value=o})end;function h:through(n)b(1,n,"string")return self:entry("railways:waypoint_destination",{text=n})end;function h:setlink(p,q,r)b(1,p,"string")b(2,q,"string")b(3,r,"number")return self:entry("railways:redstone_link",{frequency={{id=p,count=1},{id=q,count=1}},power=r})end;function h:wait(s,t)b(1,s,"number")b(2,t,"string","nil")t=t or"s"return self:condition("create:delay",{value=s,time_unit=f[t]})end;function h:time(u,v,w)b(1,u,"number")b(2,v,"number")b(3,w,"string")c(u,0,23)c(v,0,59)return self:condition("create:time_of_day",{hour=u,minute=v,rotation=g[w]})end;function h:fluid(x,y,z)b(1,x,"string")b(2,y,"string")b(3,z,"number")return self:condition("create:fluid_threshold",{bucket={id=x,count=1},threshold=z,operator=d[y],measure=0})end;function h:item(x,y,z)b(1,x,"string")b(2,y,"string")b(3,z,"number")return self:condition("create:item_threshold",{bucket={id=x,count=1},threshold=z,operator=d[y],measure=0})end;function h:getlink(p,q,A)b(1,p,"string")b(2,q,"string")b(3,A,"boolean")return self:condition("create:redstone_link",{frequency={{id=p,count=1},{id=q,count=1}},inverted=A and 0 or 1})end;function h:passengers(y,B)b(1,y,"string")b(2,B,"number")return self:condition("create:player_count",{count=B,exact=e[y]})end;function h:cargoidle(s,t)b(1,s,"number")b(2,t,"string","nil")t=t or"s"return self:condition("create:idle",{value=s,time_unit=f[t]})end;function h:unloaded()return self:condition("create:unloaded",{})end;function h:powered()return self:condition("create:powered",{})end;function h:loaded()return self:condition("railways:loaded",{})end;function h:energy(y,z)b(1,y,"string")b(2,z,"number")return self:condition("createaddition:energy_threshold",{threshold=z,operator=d[y],measure=0})end;return h
